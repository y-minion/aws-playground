name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js and Cache
        uses: actions/setup-node@v6
        with:
          node-version: "22"
          # npm install 속도 향상을 위한 캐시 (Optional)
          cache: "npm"

      - name: Install Dependencies & Build Project
        run: |
          npm install
          npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Supabase-Next.js-artifact #Supabase-Next.js-artifact이름으로 압축 업로드
          path: |
            .next
            public
            package.json
            package-lock.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # - name: Setup Known Hosts
      #   run: |
      #     mkdir -p ~/.ssh
      #     echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
      #     chmod 644 ~/.ssh/known_hosts
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: Supabase-Next.js-artifact # 다운받을 아티팩트 지정
          path: ./download/ # 압축 해제할 경로 지정

      - name: Transfer Artifacts to EC2 via SCP
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}

          source: "./download/.next/*,./download/public/*,./download/package.json,./download/package-lock.json"
          target: "~/aws-playground"

      - name: Restart Service via SSH
        uses: appleboy/ssh-action@v1
        with:
          # 🌟 1. 접속 정보
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 30m

          # 🌟 2. 원격 실행 스크립트 (하나의 블록으로 깔끔하게 정리)
          script: |
            NVM_BIN_PATH="/home/ubuntu/.nvm/versions/node/v22.20.0/bin"

            export PATH="$NVM_BIN_PATH:$PATH"

            cd ~/aws-playground || exit 1
            npm ci
            pm2 reload 0 || exit 1
